version: 2.1
workflows:
  version: 2
  build_and_test:
    jobs:
      - playground/unit
      - playground/push:
          pre-steps:
            - playground/composer_install_no_dev
          post-steps:
            - run: terminus -n drush "$TERMINUS_SITE.$TERMINUS_ENV" -- updatedb -y
            - run: terminus -n drush "$TERMINUS_SITE.$TERMINUS_ENV" cr
            - run: terminus -n drush "$TERMINUS_SITE.$TERMINUS_ENV" -- config-import --yes
      - backstop:
          requires:
             - playground/push
             - playground/unit
      - behavioral:
          requires:
             - backstop
      - cypress/run:
          requires:
             - backstop
          store_artifacts: true
          pre-steps:
            - playground/setbashenv
            - run: echo 'export CYPRESS_baseUrl="${MULTIDEV_SITE_URL}"' >> $BASH_ENV
            - run: source $BASH_ENV
      - playground/merge:
          requires:
             - behavioral
             - cypress/run
          # todo, these steps even if the branch is not master. figure out a way around that.
          post-steps:
            - run: terminus -n drush "$TERMINUS_SITE.dev" -- updatedb -y
            - run: terminus -n drush "$TERMINUS_SITE.dev" cr
            - run: terminus -n drush "$TERMINUS_SITE.dev" -- config-import --yes

orbs:
  cypress: cypress-io/cypress@1
  playground: fauxalgore/playground@dev:tenth

jobs:
  backstop:
    parameters:
      path_to_backstop_config:
        type: string
        default: "backstop/backstop-config.js"
    docker:
    - image: backstopjs/backstopjs:3.9.5
    steps:
    - playground/setbashenv
    - run: backstop reference --config=<<parameters.path_to_backstop_config>>
    - run: backstop test --config=<<parameters.path_to_backstop_config>> || touch backstop_failed.txt
    - store_artifacts:
        path: backstop_data
    - run:
        name: Report
        command: |
              CIRCLE_ARTIFACTS_URL=${CIRCLE_BUILD_URL}/artifacts/${CIRCLE_NODE_INDEX}/root/project
              IMAGE=$(find -- backstop_data/bitmaps_test -type f -name "*.png" | head -n 1) || echo "suppressing a 141 error from head. TODO, something better"
              echo $IMAGE
              REPORT_URL=${CIRCLE_ARTIFACTS_URL}/backstop_data/html_report/index.html
              BODY="### Visual regression report:\\n\\n[![Visual report](${CIRCLE_ARTIFACTS_URL}/${IMAGE})]($REPORT_URL)"
              {
                GITHUB_URL="https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/commits/${CIRCLE_SHA1}/comments?access_token=${GITHUB_TOKEN}"
                curl -d '{ "body": "'"${BODY}"'" }' -X POST "${GITHUB_URL}"
              } &> /dev/null

    - run:
        name: Report
        command: |
          if [ -f "backstop_failed.txt" ] ; then
            echo "Backstop report failed."
            exit 1
          fi

  behavioral:
      docker:
       - image: quay.io/pantheon-public/build-tools-ci:4.x
      steps:
          - playground/setbashenv
          - playground/composer_install_and_cache
          - run: terminus -n auth:login --machine-token="$TERMINUS_TOKEN"
          - run:
              name: Behat
              command: |
                export BEHAT_PARAMS='{"extensions" : {"Behat\\MinkExtension" : {"base_url" : "https://'$TERMINUS_ENV'-'$TERMINUS_SITE'.pantheonsite.io/"}}}'
                ./vendor/bin/behat --config=tests/behat/behat-pantheon.yml --strict --colors  --stop-on-failure --strict --log-step-times --suite=clickdriving "$@"
